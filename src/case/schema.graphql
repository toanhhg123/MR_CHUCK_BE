scalar Date

enum EPAD_VERSION {
  FREE
  PAID
}

enum ECaseStatus {
  NEW
  IN_PROGRESS
  CLOSED
}

enum ECASE_TYPE {
  DELIVERY_DAMAGED
  WRONG_COLOR
}

enum ESjqApprovalStatus {
  APPROVED
  PENDING
}

type Case {
  id: String!
  name: String!
  number: String!
  type: ECASE_TYPE
  status: ECaseStatus!
  description: String
  locationId: String
  subDepartment: String
  attorneyName: String
  attorneyFirmName: String
  neutralSummary: String
  additionalInfo: String
  complaintFormUploadPath: String
  sjqSubmissionDate: Date
  sjqApprovalStatus: ESjqApprovalStatus
  userCreatedId: String!
  createdAt: Date
  updatedAt: Date
  location: Location
  userCreated: User
  rooms: [Room]
  userCases: [UserCase]
  messageCases: [MessageCase]
}

type UserCase {
  id: ID!
  userId: String!
  user: User
  caseId: String!
  case: Case
  createdAt: Date
  updatedAt: Date
}

input CaseInput {
  name: String!
  number: String!
  type: ECASE_TYPE
  status: ECaseStatus!
  description: String
  locationId: String
  subDepartment: String
  attorneyName: String
  attorneyFirmName: String
  complaintFormUploadPath: String
  neutralSummary: String
  additionalInfo: String
  sjqSubmissionDate: Date
  sjqApprovalStatus: ESjqApprovalStatus
}

input CaseInputUpdate {
  name: String
  number: String
  type: ECASE_TYPE
  status: ECaseStatus
  description: String
  locationId: String
  subDepartment: String
  attorneyName: String
  attorneyFirmName: String
  complaintFormUploadPath: String
  neutralSummary: String
  additionalInfo: String
  sjqSubmissionDate: Date
  sjqApprovalStatus: ESjqApprovalStatus
}

input UserCaseInput {
  userIds: [String!]!
  caseId: String!
}

type Query {
  getCases: [Case]
  getMyCases: [Case]
  getCaseById(caseId: String!): Case
}

input OptionAddJunror {
  gender: String
  paidVersion: EPAD_VERSION
  ageRange: [Int!]
  raceOrEthnicity: EUserRaceAndEthnicity
}

type Mutation {
  createCase(caseInput: CaseInput!): Case
  addUserToCase(input: UserCaseInput!): Case
  updateCase(caseId: String!, input: CaseInputUpdate!): Case
  addJunrorToCase(
    num: Int!
    caseId: String!
    optionAddJunror: OptionAddJunror
  ): Case
  addOneJurorToCase(caseId: String!, optionAddJunror: OptionAddJunror): Case
}
